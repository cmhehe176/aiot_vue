name: Build

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          file: ./Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.UI_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set permissions for private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > cloud.pem
          chmod 600 cloud.pem

      - name: Pull Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem -p 24700 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin &&
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.UI_NAME }}:latest 
          '

      - name: Rebuild Container
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem -p 24700 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            sudo docker stop ${{ secrets.UI_NAME }} || true &&
            sudo docker rm ${{ secrets.UI_NAME }} || true &&
            sudo docker run -d --restart unless-stopped --name ${{ secrets.UI_NAME }} -p 5000:5000 --env-file ${{ secrets.UI_NAME }}/.env ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.UI_NAME }}:latest
          '

      - name: Cleanup Docker storage on remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i cloud.pem -p 24700 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
            sudo docker system prune -a -f &&
            sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"
          '
